apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    service: netdata-master
  name: netdata-master
  namespace: netdata
spec:
  replicas: 1
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
      labels:
        app: netdata-master
        deploymentconfig: netdata-master
    spec:
      containers:
        - env:
            - name: ND_1
              value: netdata.conf|global/memory mode = save
            - name: ND_2
              value: 'netdata.conf|global/bind to = 0.0.0.0:19999'
            - name: ND_3
              value: stream.conf|01-00-01/enabled = yes
            - name: ND_4
              value: stream.conf|01-00-01/history = 3600
            - name: ND_5
              value: stream.conf|01-00-01/memory mode = save
            - name: ND_6
              value: stream.conf|01-00-01/health enabled = yes
            - name: ND_7
              value: stream.conf|01-00-01/postpone alarms on connect seconds = 60
            - name: SEND_SLACK
              value: 'NO'
            - name: SLACK_WEBHOOK_URL
              value: 'https://hooks.slack.com/services/XXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXX'
            - name: SLACK_CHANNEL
              value: XXXX
          image: fzerorubigd/netdata
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 19999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: netdata
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 19999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: netdata
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /host/proc
              name: proc
              readOnly: true
            - mountPath: /var/run/docker.sock
              name: run
            - mountPath: /host/sys
              name: sys
            - mountPath: /etc/netdata/health.d
              name: health
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-gs1wq
              readOnly: true
      dnsPolicy: ClusterFirst
      hostIPC: true
      hostNetwork: true
      hostPID: true
      imagePullSecrets:
        - name: default-dockercfg-p332k
      nodeName: node3-vmw-drupal
      nodeSelector:
        region: urz
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - hostPath:
            path: /proc
          name: proc
        - hostPath:
            path: /var/run/docker.sock
          name: run
        - hostPath:
            path: /sys
          name: sys
        - hostPath:
            path: /global/netdata/health.d
          name: health
        - name: default-token-gs1wq
          secret:
            defaultMode: 420
            secretName: default-token-gs1wq
